@inject NavigationManager navigationManager

<div class="flex py-2 px-2 bg-gray-200">
    <CascadingValue Value="@this">
        @foreach (var folder in CurrentState.Folders)
        {
            <Folder ThisFolder="@folder" />
        }
    </CascadingValue>
</div>

@code {
    [Parameter]
    public Core.Models.State CurrentState { get; set; }

    public Core.Models.Folder CollectionPayload { get; set; }

    public Core.Models.Folder IsOverCollection { get; set; }
    public Core.Models.Bookmark LinkPayload { get; set; }

    public void MoveCollectionTo(int targetId, Core.Models.Folder item)
    {
        var index = CurrentState.Folders.FindIndex(x => x.Id == targetId);
        if (index >= 0)
        {
            CurrentState.Folders.RemoveAll(x => x.Id == CollectionPayload.Id);
            CurrentState.Folders.Insert(index, item);
        }
        StateHasChanged();
    }

    public void MoveLinkPayloadTo(Core.Models.Bookmark target)
    {
        LinkPayload.FolderId = target.FolderId;
        var index = CurrentState.Bookmarks.FindIndex(x => x == target);
        if (index >= 0)
        {
            CurrentState.Bookmarks.RemoveAll(x => x == LinkPayload);
            CurrentState.Bookmarks.Insert(index, LinkPayload);
        }
        StateHasChanged();
    }

    public void MoveLinkPayloadTo(Core.Models.Folder target)
    {
        LinkPayload.FolderId = target.Id;
        StateHasChanged();
    }

    public void Navigate(Core.Models.Bookmark linkToNavigate)
    {
        navigationManager.NavigateTo(linkToNavigate.Url, true);
    }

    public void Remove(Core.Models.Bookmark linkToDelete)
    {
        CurrentState.Bookmarks.RemoveAll(x => x == linkToDelete);
        StateHasChanged();
    }
}
